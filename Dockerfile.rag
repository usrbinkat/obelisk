FROM python:3.12-slim

WORKDIR /app

# Install curl and other dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy Poetry configuration and lock files
COPY pyproject.toml poetry.lock /app/

# Install poetry
RUN pip install --no-cache-dir poetry

# Configure poetry to not create virtualenv
RUN poetry config virtualenvs.create false

# Install dependencies from lock file
RUN poetry install --no-interaction --no-ansi --no-root

# Copy the RAG implementation files
COPY obelisk/ /app/obelisk/

# Create data directory
RUN mkdir -p /app/data/chroma_db
RUN mkdir -p /app/vault

# Expose RAG API port
EXPOSE 8000

# Set environment variables
ENV PYTHONPATH="/app:${PYTHONPATH}"
ENV VAULT_DIR="/app/vault"
ENV CHROMA_DIR="/app/data/chroma_db"
ENV OLLAMA_URL="http://ollama:11434"
ENV OLLAMA_MODEL="llama3"
ENV EMBEDDING_MODEL="mxbai-embed-large"
ENV API_HOST="0.0.0.0"
ENV API_PORT="8000"
ENV LOG_LEVEL="INFO"
ENV WATCH_DOCS="true"

# Add a health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD curl -f http://localhost:8000/stats || exit 1

# Run the RAG service (will use --watch flag if WATCH_DOCS is true)
COPY ./docker-entrypoint.sh /app/
RUN chmod +x /app/docker-entrypoint.sh
ENTRYPOINT ["/app/docker-entrypoint.sh"]