{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Obelisk","text":"<p>Welcome to Obelisk - an Obsidian vault to MkDocs Material Theme site generator.</p> <p>Categories: documentation \ud83d\udcda \u2022 boilerplate \ud83d\udce6 \u2022 mkdocs \ud83d\udee0\ufe0f \u2022 obsidian \ud83d\udcdd</p>"},{"location":"#overview","title":"Overview","text":"<p>Obelisk transforms your Obsidian vault into a beautifully rendered static site using MkDocs with the Material theme. It features built-in AI capabilities through integration with Ollama and Open WebUI.</p> <p>Project Status</p> <p>Obelisk is currently in active development. This documentation will be updated as new features are added.</p> <p>Quick Setup</p> <p>Get started quickly with just a few commands! See the Quick Start section below.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Obsidian Compatibility: Works with existing Obsidian vaults</li> <li>MkDocs Material Theme: Beautiful, responsive, and feature-rich documentation</li> <li>AI Integration: Connect with Ollama and Open WebUI for AI-enhanced content</li> <li>Docker Support: Easy deployment with containerization</li> <li>Python-based: Managed with Poetry for dependency management</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"Using PoetryUsing Docker <pre><code># Clone the repository\ngit clone https://github.com/usrbinkat/obelisk.git\ncd obelisk\n\n# Install dependencies\npoetry install\n\n# Start the development server\npoetry run mkdocs serve\n</code></pre> <pre><code># Clone the repository\ngit clone https://github.com/usrbinkat/obelisk.git\ncd obelisk\n\n# Build and run with Docker\ndocker-compose up obelisk\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<p>Check out Cloud Native Tooling for information on cloud tools.</p>"},{"location":"cloud/Cloud%20Native%20Tooling/","title":"Cloud Native Tooling","text":"<p>A collection of cloud-native tools and resources.</p> <p>Categories: cloud \u2601\ufe0f \u2022 kubernetes \ud83d\udea2 \u2022 devops \ud83d\udd04 \u2022 infrastructure \ud83c\udfd7\ufe0f</p>"},{"location":"cloud/Cloud%20Native%20Tooling/#kubernetes","title":"Kubernetes","text":"<p>Kubernetes</p> <p>Kubernetes is an open-source platform for automating deployment, scaling, and operations of application containers across clusters of hosts.</p>"},{"location":"cloud/Cloud%20Native%20Tooling/#key-components","title":"Key Components","text":"<ul> <li>Pods: The smallest deployable units in Kubernetes</li> <li>Services: Abstract way to expose applications running on pods</li> <li>Deployments: Declarative updates for pods and replica sets</li> <li>ConfigMaps: External configuration for applications</li> </ul>"},{"location":"cloud/Cloud%20Native%20Tooling/#infrastructure-as-code","title":"Infrastructure as Code","text":"<pre><code>graph TD\n    A[Infrastructure as Code] --&gt; B[Terraform]\n    A --&gt; C[CloudFormation]\n    A --&gt; D[Pulumi]\n    B --&gt; E[Providers]\n    E --&gt; F[AWS]\n    E --&gt; G[Azure]\n    E --&gt; H[GCP]</code></pre>"},{"location":"cloud/Cloud%20Native%20Tooling/#container-technologies","title":"Container Technologies","text":"Technology Description Use Case Docker Container platform Development, packaging Podman Daemonless container engine Security-focused environments Buildah Building OCI images CI/CD pipelines Containerd Container runtime Kubernetes environments"},{"location":"cloud/Cloud%20Native%20Tooling/#devops-practices","title":"DevOps Practices","text":"<ul> <li>Continuous Integration</li> <li>Continuous Delivery</li> <li>Infrastructure as Code</li> <li>Observability</li> <li>Security as Code</li> </ul> <p>Best Practice</p> <p>Implement GitOps workflows to manage infrastructure and application deployments through Git repositories.</p>"},{"location":"customization/","title":"MkDocs Customization Guide","text":"<p>This section documents all customizations applied to the MkDocs Material theme in the Obelisk project.</p>"},{"location":"customization/#overview","title":"Overview","text":"<p>Obelisk uses MkDocs with the Material theme to generate a static site from Markdown files. Several customizations have been applied to enhance the appearance and functionality.</p>"},{"location":"customization/#customization-categories","title":"Customization Categories","text":"<ul> <li>CSS Styling - Custom CSS styles applied to the Material theme</li> <li>HTML Templates - Customized HTML template overrides</li> <li>JavaScript Enhancements - Custom JavaScript functionality</li> <li>Python Integration - Python scripts and utilities for MkDocs</li> <li>Versioning - Documentation versioning with Mike</li> </ul>"},{"location":"customization/#configuration","title":"Configuration","text":"<p>The primary configuration for MkDocs is in the <code>mkdocs.yml</code> file in the project root. This file controls theme settings, plugins, navigation, and more.</p> <p>See the detailed MkDocs configuration guide for a complete reference.</p>"},{"location":"customization/#directory-structure","title":"Directory Structure","text":"<p>Key directories related to MkDocs customization:</p> <pre><code>/workspaces/obelisk/\n\u251c\u2500\u2500 mkdocs.yml           # Main configuration file\n\u251c\u2500\u2500 vault/               # Content source (similar to \"docs\" in standard MkDocs)\n\u2502   \u251c\u2500\u2500 index.md         # Homepage\n\u2502   \u251c\u2500\u2500 stylesheets/     # Custom CSS\n\u2502   \u2502   \u2514\u2500\u2500 extra.css    # Primary custom styles\n\u2502   \u251c\u2500\u2500 javascripts/     # Custom JavaScript\n\u2502   \u2502   \u2514\u2500\u2500 extra.js     # Custom scripts\n\u2502   \u2514\u2500\u2500 overrides/       # HTML template overrides\n\u2502       \u2514\u2500\u2500 main.html    # Main template override\n\u2514\u2500\u2500 site/                # Output directory (generated)\n    \u2514\u2500\u2500 versions.json    # Versioning information\n</code></pre>"},{"location":"customization/mkdocs-configuration/","title":"MkDocs Configuration","text":"<p>The <code>mkdocs.yml</code> file is the central configuration file for the Obelisk documentation site. This file controls theme settings, plugins, navigation structure, and more.</p>"},{"location":"customization/mkdocs-configuration/#basic-configuration","title":"Basic Configuration","text":"<pre><code>site_name: Obelisk\nsite_description: Obsidian vault to MkDocs Material Theme site generator with AI integration\nsite_author: Obelisk Team\nsite_url: https://usrbinkat.github.io/obelisk\n\nrepo_name: usrbinkat/obelisk\nrepo_url: https://github.com/usrbinkat/obelisk\nedit_uri: edit/main/vault/\n</code></pre> <p>These settings define: - site_name: The name displayed in the header and browser title - site_description: Used for SEO and metadata - site_author: The author metadata - site_url: The base URL where the site is hosted - repo_name: The name of the GitHub repository  - repo_url: Link to the GitHub repository - edit_uri: Path for the \"edit this page\" functionality</p>"},{"location":"customization/mkdocs-configuration/#theme-configuration","title":"Theme Configuration","text":"<pre><code>theme:\n  name: material\n  custom_dir: vault/overrides\n  features:\n    # Navigation\n    - navigation.instant\n    - navigation.tracking\n    - navigation.tabs\n    - navigation.tabs.sticky\n    - navigation.sections\n    - navigation.expand\n    - navigation.indexes\n    - navigation.top\n    - navigation.footer\n    - navigation.path\n\n    # Table of contents\n    - toc.follow\n    - toc.integrate\n\n    # Search\n    - search.suggest\n    - search.highlight\n    - search.share\n\n    # Content\n    - content.tabs.link\n    - content.code.annotation\n    - content.code.copy\n    - content.action.edit\n    - content.action.view\n\n    # Header anchors and tooltips\n    - header.autohide\n\n  palette:\n    # Light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n      primary: deep purple\n      accent: deep orange\n    # Dark mode  \n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n      primary: deep purple\n      accent: deep orange\n  font:\n    text: Roboto\n    code: Roboto Mono\n  favicon: assets/favicon.png\n  icon:\n    logo: material/book-open-page-variant\n    repo: fontawesome/brands/github\n  language: en\n</code></pre> <p>Key theme settings: - name: Specifies the Material theme - custom_dir: Directory for template overrides - features: Enables specific theme features - palette: Defines color schemes for light and dark mode - font: Specifies the fonts for text and code - favicon: Path to the favicon - icon: Icons for logo and repository - language: Default language</p>"},{"location":"customization/mkdocs-configuration/#markdown-extensions","title":"Markdown Extensions","text":"<pre><code>markdown_extensions:\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.magiclink:\n      repo_url_shorthand: true\n      user: usrbinkat\n      repo: obelisk\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n</code></pre> <p>This section enables various Markdown extensions that enhance the standard Markdown syntax: - admonition: Adds note, warning, tip blocks - attr_list: Allows adding HTML attributes to elements - toc: Table of contents with permalinks - pymdownx.emoji: Adds emoji support - pymdownx.highlight: Code syntax highlighting - pymdownx.superfences: Fenced code blocks with support for Mermaid diagrams - pymdownx.tabbed: Tabbed content - pymdownx.tasklist: Task lists with custom checkboxes</p>"},{"location":"customization/mkdocs-configuration/#plugins","title":"Plugins","text":"<pre><code>plugins:\n  - search\n  - git-revision-date-localized:\n      enable_creation_date: true\n      fallback_to_build_date: true\n      type: date\n  - minify:\n      minify_html: true\n      minify_js: true\n      minify_css: true\n  - awesome-pages\n  - glightbox:\n      touchNavigation: true\n      loop: false\n      effect: zoom\n      width: 100%\n      height: auto\n      zoomable: true\n      draggable: true\n</code></pre> <p>Plugins add additional functionality: - search: Adds search functionality - git-revision-date-localized: Shows last update date based on git - minify: Reduces file sizes - awesome-pages: Simplifies navigation configuration - glightbox: Enhanced image viewing</p>"},{"location":"customization/mkdocs-configuration/#extra-configuration","title":"Extra Configuration","text":"<pre><code>extra:\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/usrbinkat\n      name: GitHub\n  version:\n    provider: mike\n    default: 0.1.0\n  consent:\n    title: Cookie consent\n    description: &gt;- \n      We use cookies to recognize your repeated visits and preferences, as well\n      as to analyze traffic and understand where our visitors are coming from.\n  generator: false\n\nextra_css:\n  - stylesheets/extra.css\nextra_javascript:\n  - javascripts/extra.js\n</code></pre> <p>Additional configuration options: - social: Social media links for the footer - version: Documentation versioning configuration - consent: Cookie consent configuration - generator: Hides the \"Made with Material for MkDocs\" notice - extra_css/extra_javascript: Paths to custom CSS and JavaScript files</p>"},{"location":"customization/mkdocs-configuration/#navigation","title":"Navigation","text":"<pre><code>docs_dir: vault\n\nnav:\n  - Home: index.md\n  - Cloud: \n    - Overview: cloud/Cloud Native Tooling.md\n</code></pre> <ul> <li>docs_dir: Specifies the directory containing documentation files</li> <li>nav: Defines the navigation structure</li> <li>Can contain nested sections</li> <li>Each entry has a title and a path to a markdown file</li> </ul>"},{"location":"customization/css/","title":"CSS Customization","text":"<p>The Obelisk project includes extensive CSS customizations to enhance the appearance and user experience of the default Material theme.</p>"},{"location":"customization/css/#implementation","title":"Implementation","text":"<p>Custom CSS is applied through the <code>extra_css</code> setting in <code>mkdocs.yml</code>:</p> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>The primary CSS file is located at <code>vault/stylesheets/extra.css</code>.</p>"},{"location":"customization/css/#key-customizations","title":"Key Customizations","text":""},{"location":"customization/css/#theme-colors","title":"Theme Colors","text":"<p>Custom color variables are defined in the <code>:root</code> selector:</p> <pre><code>:root {\n  /* Primary theme colors - modern purple-blue gradient */\n  --md-primary-fg-color: #5e35b1;\n  --md-primary-fg-color--light: #9575cd;\n  --md-primary-fg-color--dark: #4527a0;\n\n  /* Accent color - complementary orange for highlights */\n  --md-accent-fg-color: #ff8a65; \n  --md-accent-fg-color--transparent: rgba(255, 138, 101, 0.1);\n}\n</code></pre>"},{"location":"customization/css/#dark-mode-support","title":"Dark Mode Support","text":"<p>Dark mode specific styles ensure proper contrast and readability:</p> <pre><code>/* Dark mode custom variables */\n[data-md-color-scheme=\"slate\"] {\n  --obelisk-box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3), 0 1px 3px rgba(0, 0, 0, 0.2);\n}\n\n[data-md-color-scheme=\"slate\"] .md-content {\n  background-color: var(--md-default-bg-color);\n}\n</code></pre>"},{"location":"customization/css/#announcement-banner","title":"Announcement Banner","text":"<p>A customized announcement banner provides an eye-catching, yet unobtrusive notice at the top of each page:</p> <pre><code>/* Announcement bar styling */\n.md-banner {\n  background-color: #ff8a65; /* Orange background */\n  color: #212121; /* Dark text */\n  padding: 0; /* Remove padding, we'll control this through height */\n  font-size: 0.8rem; /* Slightly larger font size */\n  line-height: 1; /* Minimal line height */\n  height: 36px; /* Balanced height */\n  display: flex;\n  align-items: center; /* Vertical centering */\n  justify-content: center; /* Horizontal centering */\n}\n</code></pre>"},{"location":"customization/css/#layout-enhancements","title":"Layout Enhancements","text":"<p>Content areas use subtle shadows and rounded corners for a modern look:</p> <pre><code>.md-content {\n  background-color: white;\n  border-radius: var(--obelisk-border-radius);\n  box-shadow: var(--obelisk-box-shadow);\n  padding: 1.5rem;\n  margin-bottom: 2rem;\n}\n</code></pre>"},{"location":"customization/css/#typography-improvements","title":"Typography Improvements","text":"<p>Font styles and spacing are optimized for readability:</p> <pre><code>/* Heading styles */\n.md-content h1, \n.md-content h2, \n.md-content h3 {\n  font-weight: 500;\n  margin-top: 2rem;\n}\n\n.md-content h1 {\n  font-size: 2rem;\n  margin-bottom: 1rem;\n  color: var(--md-primary-fg-color--dark);\n}\n</code></pre>"},{"location":"customization/css/#admonition-callout-styling","title":"Admonition &amp; Callout Styling","text":"<p>Enhanced styling for admonitions and custom callouts:</p> <pre><code>/* Special styling for Obsidian compatibility */\n.admonition {\n  border-radius: var(--obelisk-border-radius);\n  margin: 1.5em 0;\n  box-shadow: var(--obelisk-box-shadow);\n  border: none;\n  transition: var(--obelisk-transition);\n}\n\n/* Custom callouts */\n.callout {\n  border-left: 4px solid var(--md-primary-fg-color);\n  padding: 1em 1.5em;\n  margin: 1.2em 0;\n  background-color: var(--md-accent-fg-color--transparent);\n  border-radius: 0 var(--obelisk-border-radius) var(--obelisk-border-radius) 0;\n  box-shadow: var(--obelisk-box-shadow);\n}\n</code></pre>"},{"location":"customization/css/#responsive-design","title":"Responsive Design","text":"<p>Media queries ensure the design works well on all screen sizes:</p> <pre><code>/* Mobile Responsiveness Improvements */\n@media screen and (max-width: 76.1875em) {\n  .md-nav--primary .md-nav__title {\n    background-color: var(--md-primary-fg-color);\n    color: white;\n  }\n\n  .md-sidebar--primary {\n    background-color: white;\n  }\n\n  [data-md-color-scheme=\"slate\"] .md-sidebar--primary {\n    background-color: var(--md-default-bg-color);\n  }\n}\n</code></pre>"},{"location":"customization/css/#full-css-reference","title":"Full CSS Reference","text":"<p>For the complete set of CSS customizations, see the extra.css file.</p>"},{"location":"customization/html/","title":"HTML Template Customization","text":"<p>The Material theme in MkDocs can be customized by overriding specific HTML templates. Obelisk uses this feature to customize key parts of the interface without modifying the theme itself.</p>"},{"location":"customization/html/#implementation","title":"Implementation","text":"<p>Template overrides are enabled by setting the <code>custom_dir</code> property in <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  name: material\n  custom_dir: vault/overrides\n</code></pre> <p>All custom templates are placed in the <code>vault/overrides</code> directory.</p>"},{"location":"customization/html/#main-template-override","title":"Main Template Override","text":"<p>The primary template override is <code>main.html</code>, which extends the base template and replaces specific blocks:</p> <pre><code>{% extends \"base.html\" %}\n\n{% block announce %}\n  &lt;a href=\"https://github.com/usrbinkat/obelisk\"&gt;\n    &lt;span class=\"twemoji\"&gt;{% include \".icons/fontawesome/brands/github.svg\" %}&lt;/span&gt;\n    &lt;strong&gt;Obelisk v0.1.0&lt;/strong&gt; released - Start your Obelisk now\n  &lt;/a&gt;\n{% endblock %}\n\n{% block outdated %}\n  You're viewing an outdated version of this documentation.\n  &lt;a href=\"{{ '../' ~ base_url }}\"&gt;\n    &lt;strong&gt;Click here to go to the latest version.&lt;/strong&gt;\n  &lt;/a&gt;\n{% endblock %}\n</code></pre>"},{"location":"customization/html/#template-blocks","title":"Template Blocks","text":"<p>The Material theme provides several blocks that can be overridden:</p> Block Name Description <code>announce</code> Content for the announcement bar at the top of the page <code>outdated</code> Message displayed when viewing an outdated version of the documentation <code>content</code> Main content area of the page <code>extrahead</code> Additional content for the HTML head section <code>footer</code> Footer content"},{"location":"customization/html/#key-customizations","title":"Key Customizations","text":""},{"location":"customization/html/#announcement-banner","title":"Announcement Banner","text":"<p>The announcement banner is customized to display the current Obelisk version with a link to the GitHub repository:</p> <pre><code>{% block announce %}\n  &lt;a href=\"https://github.com/usrbinkat/obelisk\"&gt;\n    &lt;span class=\"twemoji\"&gt;{% include \".icons/fontawesome/brands/github.svg\" %}&lt;/span&gt;\n    &lt;strong&gt;Obelisk v0.1.0&lt;/strong&gt; released - Start your Obelisk now\n  &lt;/a&gt;\n{% endblock %}\n</code></pre>"},{"location":"customization/html/#outdated-version-message","title":"Outdated Version Message","text":"<p>The message for outdated versions is customized to provide clear navigation to the latest version:</p> <pre><code>{% block outdated %}\n  You're viewing an outdated version of this documentation.\n  &lt;a href=\"{{ '../' ~ base_url }}\"&gt;\n    &lt;strong&gt;Click here to go to the latest version.&lt;/strong&gt;\n  &lt;/a&gt;\n{% endblock %}\n</code></pre>"},{"location":"customization/html/#adding-new-template-overrides","title":"Adding New Template Overrides","text":"<p>To add a new template override:</p> <ol> <li>Identify the template file you want to override from the Material theme</li> <li>Create a file with the same name in the <code>vault/overrides</code> directory</li> <li>Either extend the base template and override specific blocks, or provide a complete replacement</li> </ol> <p>For example, to override the footer:</p> <pre><code>{% extends \"base.html\" %}\n\n{% block footer %}\n  &lt;footer class=\"md-footer\"&gt;\n    &lt;div class=\"md-footer-meta md-typeset\"&gt;\n      &lt;div class=\"md-footer-meta__inner md-grid\"&gt;\n        &lt;div class=\"md-footer-copyright\"&gt;\n          &lt;div class=\"md-footer-copyright__highlight\"&gt;\n            Powered by Obelisk {{ config.extra.version.default }}\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/footer&gt;\n{% endblock %}\n</code></pre>"},{"location":"customization/html/#full-template-reference","title":"Full Template Reference","text":"<p>For more information on template customization, refer to the Material theme documentation.</p>"},{"location":"customization/javascript/","title":"JavaScript Customization","text":"<p>Obelisk includes custom JavaScript to enhance the user experience beyond what's provided by the standard Material theme.</p>"},{"location":"customization/javascript/#implementation","title":"Implementation","text":"<p>JavaScript is added through the <code>extra_javascript</code> setting in <code>mkdocs.yml</code>:</p> <pre><code>extra_javascript:\n  - javascripts/extra.js\n</code></pre> <p>The custom JavaScript file is located at <code>vault/javascripts/extra.js</code>.</p>"},{"location":"customization/javascript/#key-features","title":"Key Features","text":""},{"location":"customization/javascript/#smooth-scrolling","title":"Smooth Scrolling","text":"<p>Implements smooth scrolling for anchor links within the same page:</p> <pre><code>// Add smooth scroll behavior\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(anchor =&gt; {\n  anchor.addEventListener('click', function (e) {\n    e.preventDefault();\n\n    const target = document.querySelector(this.getAttribute('href'));\n    if (target) {\n      target.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  });\n});\n</code></pre>"},{"location":"customization/javascript/#version-footer","title":"Version Footer","text":"<p>Adds a version indicator to the footer:</p> <pre><code>// Add version text to footer\nconst footer = document.querySelector('.md-footer-meta');\nif (footer) {\n  const versionDiv = document.createElement('div');\n  versionDiv.className = 'md-footer-version';\n  versionDiv.innerHTML = '&lt;span&gt;Obelisk v0.1.0&lt;/span&gt;';\n  footer.querySelector('.md-footer-meta__inner').appendChild(versionDiv);\n}\n</code></pre>"},{"location":"customization/javascript/#cookie-consent-handling","title":"Cookie Consent Handling","text":"<p>Automatically handles cookie consent in development environments:</p> <pre><code>// Accept cookie consent by default in development\nconst acceptButtons = document.querySelectorAll('.md-dialog__accept');\nif (acceptButtons.length &gt; 0) {\n  setTimeout(() =&gt; {\n    acceptButtons[0].click();\n  }, 500);\n}\n</code></pre>"},{"location":"customization/javascript/#adding-custom-javascript","title":"Adding Custom JavaScript","text":"<p>To add new JavaScript functionality:</p> <ol> <li>Edit the <code>extra.js</code> file or create a new JavaScript file</li> <li>Add the file to the <code>extra_javascript</code> list in <code>mkdocs.yml</code> if needed</li> <li>Make sure your code is wrapped in a DOM ready event listener:</li> </ol> <pre><code>document.addEventListener('DOMContentLoaded', function() {\n  // Your code here\n});\n</code></pre>"},{"location":"customization/javascript/#integrating-with-material-theme","title":"Integrating with Material Theme","text":"<p>The Material theme provides several JavaScript hooks and events that can be used for customization. Common integration points include:</p> <ul> <li>Search functionality - Customizing search behavior</li> <li>Navigation - Enhancing navigation interactions</li> <li>Color scheme switching - Adding custom handling for light/dark mode</li> <li>Content tabs - Extending tabbed content behavior</li> </ul>"},{"location":"customization/javascript/#full-javascript-reference","title":"Full JavaScript Reference","text":"<p>For the complete set of JavaScript customizations, see the extra.js file.</p>"},{"location":"customization/python/","title":"Python Integration","text":"<p>Obelisk uses Python for extending MkDocs functionality and providing utilities for managing the documentation. This section details the Python components related to MkDocs customization.</p>"},{"location":"customization/python/#project-structure","title":"Project Structure","text":"<p>The Python code for Obelisk is organized in the <code>/workspaces/obelisk/obelisk</code> directory:</p> <pre><code>/workspaces/obelisk/obelisk/\n\u251c\u2500\u2500 __init__.py          # Package initialization with version info\n\u251c\u2500\u2500 cli.py               # Command-line interface \n\u251c\u2500\u2500 config.py            # Configuration utilities\n\u2514\u2500\u2500 convert.py           # Conversion utilities for Obsidian to MkDocs\n</code></pre>"},{"location":"customization/python/#package-initialization","title":"Package Initialization","text":"<p>The <code>__init__.py</code> file defines basic package information:</p> <pre><code>\"\"\"\nObelisk - Obsidian vault to MkDocs Material Theme site generator.\n\"\"\"\n\n__version__ = \"0.1.0\"\n__author__ = \"Obelisk Team\"\n</code></pre>"},{"location":"customization/python/#command-line-interface","title":"Command-Line Interface","text":"<p>The <code>cli.py</code> module provides a command-line interface for using Obelisk:</p> <pre><code>\"\"\"\nObelisk CLI tool to convert Obsidian vaults to MkDocs sites.\n\"\"\"\n\nimport argparse\nimport sys\nimport subprocess\nfrom pathlib import Path\n\nfrom . import __version__\n\ndef main():\n    \"\"\"Main CLI entry point.\"\"\"\n    parser = argparse.ArgumentParser(\n        description=\"Convert Obsidian vault to MkDocs Material Theme site.\"\n    )\n    parser.add_argument(\n        \"--version\", action=\"version\", version=f\"Obelisk {__version__}\"\n    )\n    parser.add_argument(\n        \"--vault\", \n        type=str, \n        help=\"Path to Obsidian vault directory\",\n        default=\"vault\"\n    )\n    parser.add_argument(\n        \"--output\", \n        type=str, \n        help=\"Output directory for the generated site\",\n        default=\"site\"\n    )\n    parser.add_argument(\n        \"--serve\", \n        action=\"store_true\", \n        help=\"Start a development server after building\"\n    )\n\n    # Command processing logic...\n</code></pre>"},{"location":"customization/python/#configuration-utilities","title":"Configuration Utilities","text":"<p>The <code>config.py</code> module contains utilities for handling MkDocs configuration:</p> <pre><code>\"\"\"\nConfiguration utilities for Obelisk.\n\"\"\"\n\nimport yaml\n\ndef get_default_config():\n    \"\"\"Return the default Obelisk configuration.\"\"\"\n    return {\n        \"site_name\": \"Obelisk\",\n        \"site_description\": \"Obsidian vault to MkDocs Material Theme site generator\",\n        \"theme\": {\n            \"name\": \"material\",\n            \"features\": [\n                \"navigation.instant\",\n                \"navigation.tracking\",\n                \"navigation.tabs\",\n                # Other features...\n            ],\n            \"palette\": [\n                {\n                    \"scheme\": \"default\",\n                    \"primary\": \"deep purple\",\n                    \"accent\": \"deep orange\"\n                },\n                {\n                    \"scheme\": \"slate\",\n                    \"primary\": \"deep purple\",\n                    \"accent\": \"deep orange\"\n                }\n            ]\n        },\n        # Other configuration options...\n    }\n</code></pre>"},{"location":"customization/python/#conversion-utilities","title":"Conversion Utilities","text":"<p>The <code>convert.py</code> module handles conversion from Obsidian to MkDocs format:</p> <pre><code>\"\"\"\nConversion utilities for transforming Obsidian files to MkDocs-compatible format.\n\"\"\"\n\nimport re\nimport shutil\nfrom pathlib import Path\n\ndef process_obsidian_vault(vault_path, output_path=\"vault\"):\n    \"\"\"\n    Process an Obsidian vault directory and prepare it for MkDocs.\n    \"\"\"\n    # Process all markdown files...\n\ndef convert_file(input_path, output_path):\n    \"\"\"\n    Convert an Obsidian markdown file to MkDocs compatible format.\n    \"\"\"\n    # Convert wiki links to markdown links\n    # Convert Obsidian callouts to admonitions\n    # Convert Obsidian comments to HTML comments\n</code></pre>"},{"location":"customization/python/#integration-with-mkdocs","title":"Integration with MkDocs","text":"<p>The Python code integrates with MkDocs through:</p> <ol> <li>Command execution - Running MkDocs commands via <code>subprocess</code></li> <li>Configuration generation - Creating and modifying <code>mkdocs.yml</code></li> <li>Content processing - Transforming Obsidian syntax to MkDocs/Material compatible format</li> </ol>"},{"location":"customization/python/#using-the-python-cli","title":"Using the Python CLI","text":"<p>The CLI is registered as an entry point in <code>pyproject.toml</code>:</p> <pre><code>[project.scripts]\nobelisk = \"obelisk.cli:main\"\n</code></pre> <p>This allows running Obelisk as a command:</p> <pre><code>obelisk --vault /path/to/obsidian/vault --serve\n</code></pre>"},{"location":"customization/python/#extending-with-mkdocs-plugins","title":"Extending with MkDocs Plugins","text":"<p>For more complex customizations, Python can be used to create custom MkDocs plugins. These would be placed in a <code>plugins</code> subdirectory and registered in <code>mkdocs.yml</code>.</p>"},{"location":"customization/versioning/","title":"Documentation Versioning","text":"<p>Obelisk implements documentation versioning using Mike, which allows maintaining multiple versions of the documentation simultaneously.</p>"},{"location":"customization/versioning/#configuration","title":"Configuration","text":"<p>Versioning is configured in the <code>mkdocs.yml</code> file:</p> <pre><code>extra:\n  version:\n    provider: mike\n    default: 0.1.0\n</code></pre>"},{"location":"customization/versioning/#version-files","title":"Version Files","text":"<p>The versioning information is stored in two places:</p> <ol> <li>versions.json - Lists all available versions</li> <li>Site deployment directories - Each version has its own directory</li> </ol> <p>The <code>versions.json</code> file format:</p> <pre><code>[\n  {\n    \"version\": \"0.1.0\",\n    \"title\": \"0.1.0\",\n    \"aliases\": [\n      \"latest\"\n    ]\n  }\n]\n</code></pre>"},{"location":"customization/versioning/#deployment-commands","title":"Deployment Commands","text":"<p>Version deployment is managed through Taskfile commands:</p> <pre><code># From Taskfile.yaml\nversion-deploy:\n  desc: \"Deploy a new version (requires version number and description)\"\n  cmds:\n    - poetry run mike deploy --push --update-aliases {{.CLI_ARGS}}\n\nversion-set-default:\n  desc: \"Set the default version (requires version number)\"\n  cmds:\n    - poetry run mike set-default --push {{.CLI_ARGS}}\n</code></pre> <p>Usage:</p> <pre><code># Deploy new version\ntask version-deploy -- 0.1.0 \"Initial boilerplate template release\"\n\n# Set as default\ntask version-set-default -- 0.1.0\n</code></pre>"},{"location":"customization/versioning/#version-selection-ui","title":"Version Selection UI","text":"<p>The Material theme displays a version selection dropdown when versioning is enabled. The styling for this dropdown is customized in <code>extra.css</code>:</p> <pre><code>/* Version selector styling */\n.md-version {\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  padding: 0 0.5rem;\n}\n</code></pre>"},{"location":"customization/versioning/#outdated-version-notice","title":"Outdated Version Notice","text":"<p>When viewing an outdated version, a notice is displayed at the top of the page. This notice is customized in <code>main.html</code>:</p> <pre><code>{% block outdated %}\n  You're viewing an outdated version of this documentation.\n  &lt;a href=\"{{ '../' ~ base_url }}\"&gt;\n    &lt;strong&gt;Click here to go to the latest version.&lt;/strong&gt;\n  &lt;/a&gt;\n{% endblock %}\n</code></pre>"},{"location":"customization/versioning/#version-integration-with-announcement-banner","title":"Version Integration with Announcement Banner","text":"<p>The current version is displayed in the announcement banner:</p> <pre><code>{% block announce %}\n  &lt;a href=\"https://github.com/usrbinkat/obelisk\"&gt;\n    &lt;span class=\"twemoji\"&gt;{% include \".icons/fontawesome/brands/github.svg\" %}&lt;/span&gt;\n    &lt;strong&gt;Obelisk v0.1.0&lt;/strong&gt; released - Start your Obelisk now\n  &lt;/a&gt;\n{% endblock %}\n</code></pre>"},{"location":"customization/versioning/#managing-multiple-versions","title":"Managing Multiple Versions","text":"<p>To maintain multiple versions:</p> <ol> <li>Make changes to the documentation</li> <li>Deploy a new version with an appropriate version number and description</li> <li>Optionally set the new version as the default</li> <li>Users can switch between versions using the dropdown in the UI</li> </ol>"},{"location":"customization/versioning/#versioning-best-practices","title":"Versioning Best Practices","text":"<ol> <li>Semantic Versioning - Use SemVer format (MAJOR.MINOR.PATCH)</li> <li>Clear Descriptions - Provide meaningful descriptions for each version</li> <li>Default Version - Typically set the latest stable version as default</li> <li>Aliases - Use aliases like \"latest\" or \"stable\" for important versions</li> </ol>"},{"location":"development/","title":"Development Configuration","text":"<p>This section documents the development environment configuration files and tools used in the Obelisk project.</p>"},{"location":"development/#project-structure","title":"Project Structure","text":"<p>The root level of the Obelisk project contains several configuration files and directories that control development, building, and deployment:</p> <pre><code>/workspaces/obelisk/\n\u251c\u2500\u2500 .devcontainer/                # Development container configuration\n\u2502   \u251c\u2500\u2500 devcontainer.json         # VS Code development container settings\n\u2502   \u2514\u2500\u2500 Dockerfile                # Development container image definition\n\u251c\u2500\u2500 .github/                      # GitHub-specific configurations\n\u2502   \u2514\u2500\u2500 dependabot.yml            # Dependabot configuration\n\u251c\u2500\u2500 obelisk/                      # Python package for Obelisk\n\u2502   \u251c\u2500\u2500 __init__.py               # Package initialization\n\u2502   \u251c\u2500\u2500 cli.py                    # Command-line interface\n\u2502   \u251c\u2500\u2500 config.py                 # Configuration utilities\n\u2502   \u2514\u2500\u2500 convert.py                # Conversion utilities\n\u251c\u2500\u2500 site/                         # Generated static site (output)\n\u251c\u2500\u2500 vault/                        # Documentation content (input)\n\u251c\u2500\u2500 .editorconfig                 # Editor configuration for consistency\n\u251c\u2500\u2500 .envrc                        # direnv configuration for environment setup\n\u251c\u2500\u2500 .gitattributes                # Git attributes configuration\n\u251c\u2500\u2500 .gitignore                    # Files ignored by Git\n\u251c\u2500\u2500 CLAUDE.md                     # Instructions for Claude AI assistant\n\u251c\u2500\u2500 CONTRIBUTING.md               # Contribution guidelines\n\u251c\u2500\u2500 docker-compose.yaml           # Docker Compose configuration\n\u251c\u2500\u2500 Dockerfile                    # Main Docker image definition\n\u251c\u2500\u2500 LICENSE                       # Project license\n\u251c\u2500\u2500 mkdocs.yml                    # MkDocs configuration\n\u251c\u2500\u2500 poetry.lock                   # Poetry locked dependencies\n\u251c\u2500\u2500 pyproject.toml                # Python project configuration\n\u251c\u2500\u2500 README.md                     # Project README\n\u251c\u2500\u2500 Taskfile.yaml                 # Task runner configuration\n\u2514\u2500\u2500 versions.json                 # Documentation version information\n</code></pre>"},{"location":"development/#development-environment-files","title":"Development Environment Files","text":"<p>The following sections document the various configuration files and their purposes:</p> <ul> <li>Docker Configuration - Docker and container configuration</li> <li>Task Runner - Task runner configuration and usage</li> <li>Python Configuration - Python project settings and dependencies</li> <li>Git Configuration - Git workflow and settings</li> <li>Editor Configuration - Code editor settings</li> <li>Documentation Files - Project documentation</li> </ul>"},{"location":"development/docker/","title":"Docker Configuration","text":"<p>Obelisk uses Docker for containerization of both the development environment and the production deployment.</p>"},{"location":"development/docker/#dockerfile","title":"Dockerfile","text":"<p>The main <code>Dockerfile</code> defines the container image for running Obelisk:</p> <pre><code># View the Dockerfile contents\ncat /workspaces/obelisk/Dockerfile\n</code></pre> <p>This file defines: - Base image selection - System dependencies installation - Python environment setup - Obelisk installation - Default command execution</p>"},{"location":"development/docker/#docker-compose-configuration","title":"Docker Compose Configuration","text":"<p>The <code>docker-compose.yaml</code> file orchestrates the complete Obelisk stack, including optional AI components:</p> <pre><code># View the docker-compose.yaml contents\ncat /workspaces/obelisk/docker-compose.yaml\n</code></pre> <p>Key services include: - obelisk: The main Obelisk documentation server - ollama: (Optional) AI model server for local embedding and inference - openwebui: (Optional) Web interface for interacting with AI models</p>"},{"location":"development/docker/#development-container","title":"Development Container","text":"<p>The <code>.devcontainer</code> directory contains configuration for VS Code's Development Containers feature:</p>"},{"location":"development/docker/#devcontainerjson","title":"devcontainer.json","text":"<pre><code># View the devcontainer.json contents\ncat /workspaces/obelisk/.devcontainer/devcontainer.json\n</code></pre> <p>This file configures: - Development container settings - VS Code extensions to install - Port forwarding - Environment variables - Startup commands</p>"},{"location":"development/docker/#dockerfile-dev","title":"Dockerfile (Dev)","text":"<pre><code># View the development container Dockerfile\ncat /workspaces/obelisk/.devcontainer/Dockerfile\n</code></pre> <p>The development container Dockerfile includes: - Development-specific tools and dependencies - Debugging utilities - Additional build tools</p>"},{"location":"development/docker/#running-with-docker","title":"Running with Docker","text":"<p>To run Obelisk using Docker:</p> <ol> <li> <p>Build the image:    <pre><code>docker build -t obelisk .\n</code></pre></p> </li> <li> <p>Run with Docker:    <pre><code>docker run -p 8000:8000 obelisk\n</code></pre></p> </li> <li> <p>Run with Docker Compose:    <pre><code>docker-compose up obelisk\n</code></pre></p> </li> <li> <p>Run the full stack with AI:    <pre><code>docker-compose up\n</code></pre></p> </li> </ol>"},{"location":"development/docker/#task-runner-integration","title":"Task Runner Integration","text":"<p>Docker commands are also available through the Task runner:</p> <pre><code># Build Docker container\ntask docker-build\n\n# Run with local volumes mounted\ntask docker-run\n\n# Run Obelisk service only\ntask compose-obelisk\n\n# Run full stack with Ollama and OpenWebUI\ntask compose\n</code></pre>"},{"location":"development/documentation/","title":"Documentation Files","text":"<p>Obelisk includes several documentation files to guide developers and users.</p>"},{"location":"development/documentation/#readmemd","title":"README.md","text":"<p>The primary project README provides an overview of Obelisk:</p> <pre><code># View README.md contents\ncat /workspaces/obelisk/README.md\n</code></pre> <p>The README typically includes: - Project description and purpose - Quick start instructions - Key features - Requirements - Basic usage examples - Links to more detailed documentation</p>"},{"location":"development/documentation/#contributingmd","title":"CONTRIBUTING.md","text":"<p>Guidelines for contributing to the project:</p> <pre><code># View CONTRIBUTING.md contents\ncat /workspaces/obelisk/CONTRIBUTING.md\n</code></pre> <p>This file covers: - How to set up a development environment - Coding standards and conventions - Testing requirements - Pull request process - Issue reporting guidelines</p>"},{"location":"development/documentation/#claudemd","title":"CLAUDE.md","text":"<p>Special instructions for Claude AI assistants:</p> <pre><code># View CLAUDE.md contents\ncat /workspaces/obelisk/CLAUDE.md\n</code></pre> <p>This file provides: - Project context for Claude AI - Common commands and workflows - Code style guidelines - Specific instructions for AI-assisted development</p>"},{"location":"development/documentation/#license","title":"LICENSE","text":"<p>The project's license file:</p> <pre><code># View LICENSE contents\ncat /workspaces/obelisk/LICENSE\n</code></pre> <p>Obelisk is licensed under the MIT License, which: - Permits commercial use, modification, distribution, and private use - Requires license and copyright notice inclusion - Provides no warranty or liability</p>"},{"location":"development/documentation/#documentation-structure","title":"Documentation Structure","text":"<p>The documentation content is organized in the <code>vault</code> directory, with additional content generated during the build process:</p> <pre><code>vault/\n\u251c\u2500\u2500 assets/                  # Static assets like images\n\u251c\u2500\u2500 cloud/                   # Cloud-related documentation\n\u251c\u2500\u2500 customization/           # Theme customization documentation\n\u251c\u2500\u2500 development/             # Development setup documentation\n\u251c\u2500\u2500 javascripts/             # Custom JavaScript files\n\u251c\u2500\u2500 overrides/               # Theme template overrides\n\u251c\u2500\u2500 stylesheets/             # Custom CSS styles\n\u2514\u2500\u2500 index.md                 # Home page\n</code></pre>"},{"location":"development/documentation/#generated-documentation","title":"Generated Documentation","text":"<p>The built documentation is generated to the <code>site</code> directory:</p> <pre><code>site/\n\u251c\u2500\u2500 404.html                 # Not found page\n\u251c\u2500\u2500 assets/                  # Processed assets\n\u251c\u2500\u2500 cloud/                   # Built cloud documentation\n\u251c\u2500\u2500 customization/           # Built customization documentation\n\u251c\u2500\u2500 development/             # Built development documentation\n\u251c\u2500\u2500 index.html               # Built home page\n\u251c\u2500\u2500 search/                  # Search index files\n\u251c\u2500\u2500 sitemap.xml              # Site map for search engines\n\u2514\u2500\u2500 versions.json            # Documentation version information\n</code></pre>"},{"location":"development/editor-config/","title":"Editor Configuration","text":"<p>Obelisk includes configuration files for consistent code formatting and editor behavior across development environments.</p>"},{"location":"development/editor-config/#editorconfig","title":".editorconfig","text":"<p>The <code>.editorconfig</code> file defines coding style preferences that many editors and IDEs support:</p> <pre><code># View .editorconfig contents\ncat /workspaces/obelisk/.editorconfig\n</code></pre> <p>Key settings include: - indent_style: Spaces vs tabs - indent_size: Number of spaces per indentation level - end_of_line: Line ending style (LF, CRLF) - charset: Character encoding - trim_trailing_whitespace: Remove trailing spaces - insert_final_newline: Ensure files end with a newline</p> <p>Different rules can be specified for different file types:</p> <pre><code># Python files\n[*.py]\nindent_style = space\nindent_size = 4\n\n# YAML files\n[*.{yml,yaml}]\nindent_style = space\nindent_size = 2\n</code></pre>"},{"location":"development/editor-config/#vs-code-integration","title":"VS Code Integration","text":"<p>The <code>.devcontainer/devcontainer.json</code> file includes VS Code-specific settings:</p> <pre><code>\"settings\": {\n    \"python.defaultInterpreterPath\": \"/usr/local/bin/python\",\n    \"python.linting.enabled\": true,\n    \"python.linting.pylintEnabled\": true,\n    \"python.formatting.provider\": \"black\",\n    \"editor.formatOnSave\": true,\n    \"editor.rulers\": [88],\n    \"terminal.integrated.defaultProfile.linux\": \"bash\"\n}\n</code></pre> <p>These settings configure: - Python interpreter path - Linting tools and settings - Code formatting (Black) - Format on save behavior - Visual rulers for line length - Terminal configuration</p>"},{"location":"development/editor-config/#recommended-extensions","title":"Recommended Extensions","text":"<p>The development container configuration includes recommended VS Code extensions:</p> <pre><code>\"extensions\": [\n    \"ms-python.python\",\n    \"ms-python.vscode-pylance\",\n    \"batisteo.vscode-django\",\n    \"yzhang.markdown-all-in-one\"\n]\n</code></pre> <p>Popular extensions for Obelisk development include: - Python: Python language support - Pylance: Python language server - Django: Django framework support - Markdown All in One: Markdown editing features</p>"},{"location":"development/editor-config/#code-style-enforcement","title":"Code Style Enforcement","text":"<p>Obelisk uses several tools to enforce code style:</p> <ol> <li>Black: Code formatter with minimal configuration</li> <li>Ruff: Fast Python linter</li> <li>mypy: Optional static type checking</li> </ol> <p>Configuration for these tools is in <code>pyproject.toml</code>:</p> <pre><code>[tool.black]\nline-length = 88\ntarget-version = [\"py312\"]\n\n[tool.ruff]\nline-length = 88\ntarget-version = \"py312\"\nselect = [\"E\", \"F\", \"I\", \"W\"]\nignore = []\n</code></pre>"},{"location":"development/git-config/","title":"Git Configuration","text":"<p>Obelisk uses Git for version control with several additional configuration files for managing repository behavior.</p>"},{"location":"development/git-config/#gitignore","title":".gitignore","text":"<p>The <code>.gitignore</code> file specifies which files and directories should be excluded from Git:</p> <pre><code># View .gitignore contents\ncat /workspaces/obelisk/.gitignore\n</code></pre> <p>Key exclusions include: - Built documentation (<code>/site/</code>) - Python cache files (<code>__pycache__/</code>, <code>*.py[cod]</code>) - Virtual environments (<code>.venv/</code>, <code>venv/</code>) - Environment files (<code>.env</code>) - System and editor files (<code>.DS_Store</code>, <code>.idea/</code>)</p>"},{"location":"development/git-config/#gitattributes","title":".gitattributes","text":"<p>The <code>.gitattributes</code> file defines attributes for paths in the repository:</p> <pre><code># View .gitattributes contents\ncat /workspaces/obelisk/.gitattributes\n</code></pre> <p>This file controls: - Line ending normalization - Diff behavior for specific file types - Merge strategies - Export settings</p>"},{"location":"development/git-config/#github-configuration","title":"GitHub Configuration","text":""},{"location":"development/git-config/#githubdependabotyml","title":".github/dependabot.yml","text":"<p>Dependabot configuration for automated dependency updates:</p> <pre><code># View dependabot.yml contents\ncat /workspaces/obelisk/.github/dependabot.yml\n</code></pre> <p>This configuration specifies: - Package ecosystems to monitor (e.g., pip, docker) - Update frequency - Target branches - Reviewers and assignees - Version update strategy</p>"},{"location":"development/git-config/#git-workflow","title":"Git Workflow","text":""},{"location":"development/git-config/#branching-strategy","title":"Branching Strategy","text":"<p>The project follows a feature branch workflow:</p> <ol> <li>The <code>main</code> branch contains stable releases</li> <li>Feature branches are created for new features or fixes</li> <li>Pull requests are used to merge changes back to main</li> <li>The <code>v4</code> branch is used for publishing docs with versioning</li> </ol>"},{"location":"development/git-config/#commit-conventions","title":"Commit Conventions","text":"<p>Commit messages follow the conventional commits format:</p> <pre><code>&lt;type&gt;: &lt;description&gt;\n\n[optional body]\n\n[optional footer]\n</code></pre> <p>Types include: - <code>feat</code>: New feature - <code>fix</code>: Bug fix - <code>docs</code>: Documentation changes - <code>style</code>: Formatting changes - <code>refactor</code>: Code refactoring - <code>test</code>: Adding or updating tests - <code>chore</code>: Maintenance tasks</p>"},{"location":"development/git-config/#version-tags","title":"Version Tags","text":"<p>Git tags are used to mark version releases:</p> <pre><code># Create a version tag\ngit tag -a v0.1.0 -m \"Initial release\"\n\n# Push tags to remote\ngit push --tags\n</code></pre>"},{"location":"development/python-config/","title":"Python Configuration","text":"<p>Obelisk uses modern Python tooling for dependency management, packaging, and development.</p>"},{"location":"development/python-config/#pyprojecttoml","title":"pyproject.toml","text":"<p>The <code>pyproject.toml</code> file defines the project's metadata, dependencies, and build system:</p> <pre><code># View the pyproject.toml contents\ncat /workspaces/obelisk/pyproject.toml\n</code></pre> <p>Key sections include:</p>"},{"location":"development/python-config/#project-metadata","title":"Project Metadata","text":"<pre><code>[project]\nname = \"obelisk\"\nversion = \"0.1.0\"\ndescription = \"Obsidian vault to MkDocs Material Theme site generator\"\nauthors = [\n    {name = \"Obelisk Team\"}\n]\nreadme = \"README.md\"\nrequires-python = \"^3.12\"\nlicense = \"MIT\"\n</code></pre>"},{"location":"development/python-config/#dependencies","title":"Dependencies","text":"<pre><code>dependencies = [\n    \"mkdocs&gt;=1.6.0,&lt;2.0.0\",\n    \"mkdocs-material&gt;=9.6.11,&lt;10.0.0\",\n    \"mkdocs-material-extensions&gt;=1.3.1,&lt;2.0.0\",\n    \"mkdocs-git-revision-date-localized-plugin&gt;=1.4.5,&lt;2.0.0\",\n    # Other dependencies...\n]\n</code></pre>"},{"location":"development/python-config/#script-entrypoints","title":"Script Entrypoints","text":"<pre><code>[project.scripts]\nobelisk = \"obelisk.cli:main\"\n</code></pre>"},{"location":"development/python-config/#development-tools-configuration","title":"Development Tools Configuration","text":"<pre><code>[tool.black]\nline-length = 88\ntarget-version = [\"py312\"]\n\n[tool.ruff]\nline-length = 88\ntarget-version = \"py312\"\nselect = [\"E\", \"F\", \"I\", \"W\"]\nignore = []\n</code></pre>"},{"location":"development/python-config/#poetrylock","title":"poetry.lock","text":"<p>The <code>poetry.lock</code> file contains the exact versions of all dependencies:</p> <pre><code># View lock file summary\ncat /workspaces/obelisk/poetry.lock | head -n 20\n</code></pre> <p>This file ensures reproducible builds by pinning exact versions of: - Direct dependencies - Transitive dependencies - Platform-specific dependencies</p>"},{"location":"development/python-config/#poetry-usage","title":"Poetry Usage","text":"<p>Poetry is used for dependency management and packaging:</p> <pre><code># Install dependencies\npoetry install\n\n# Add a dependency\npoetry add package-name\n\n# Update dependencies\npoetry update\n\n# Run a command in the virtual environment\npoetry run command\n\n# Activate the virtual environment\npoetry shell\n</code></pre>"},{"location":"development/python-config/#direnv-integration","title":"direnv Integration","text":"<p>The <code>.envrc</code> file integrates with direnv for automatic environment activation:</p> <pre><code># View .envrc contents\ncat /workspaces/obelisk/.envrc\n</code></pre> <p>When entering the project directory, direnv: 1. Activates the Python virtual environment 2. Sets necessary environment variables 3. Adds development tools to the PATH</p>"},{"location":"development/task-runner/","title":"Task Runner","text":"<p>Obelisk uses Task (via Taskfile.yaml) as a task runner for development and deployment workflows.</p>"},{"location":"development/task-runner/#taskfileyaml","title":"Taskfile.yaml","text":"<p>The <code>Taskfile.yaml</code> file defines all project tasks and their dependencies:</p> <pre><code># View the Taskfile.yaml contents\ncat /workspaces/obelisk/Taskfile.yaml\n</code></pre>"},{"location":"development/task-runner/#available-tasks","title":"Available Tasks","text":""},{"location":"development/task-runner/#development-tasks","title":"Development Tasks","text":"<pre><code># Install dependencies (Poetry)\ntask install\n\n# Build static site\ntask build\n\n# Run strict build testing\ntask test\n\n# Fast development server with livereload\ntask run\n\n# Build and serve with browser opening\ntask serve\n\n# Remove build artifacts\ntask clean\n</code></pre>"},{"location":"development/task-runner/#versioning-tasks","title":"Versioning Tasks","text":"<pre><code># Deploy version (requires version number and description)\ntask version-deploy -- X.Y.Z \"Description\"\n\n# Set default version (requires version number)\ntask version-set-default -- X.Y.Z\n</code></pre>"},{"location":"development/task-runner/#docker-tasks","title":"Docker Tasks","text":"<pre><code># Build Docker container\ntask docker-build\n\n# Run with local volumes mounted\ntask docker-run\n\n# Run Obelisk service only\ntask compose-obelisk\n\n# Run full stack with Ollama and OpenWebUI\ntask compose\n</code></pre>"},{"location":"development/task-runner/#task-implementation-details","title":"Task Implementation Details","text":"<p>Each task in the Taskfile defines:</p> <ul> <li>desc: Description of what the task does</li> <li>deps: Tasks that must run before this one</li> <li>cmds: Commands to execute</li> <li>vars: Variables used by the task</li> <li>sources/generates: Files to watch for incremental builds</li> </ul>"},{"location":"development/task-runner/#task-variables","title":"Task Variables","text":"<p>The Taskfile also defines variables for configuration:</p> <pre><code>vars:\n  # Project settings\n  PACKAGE: obelisk\n  PYTHON_VERSION: \"3.12\"\n\n  # Docker settings\n  DOCKER_IMAGE: {{.PACKAGE}}\n  DOCKER_TAG: latest\n  DOCKER_RUN_PORT: 8000\n</code></pre>"},{"location":"development/task-runner/#example-usage","title":"Example Usage","text":"<pre><code># Install dependencies\ntask install\n\n# Start development server\ntask run\n\n# Deploy a new version\ntask version-deploy -- 0.1.0 \"Initial release\"\n</code></pre>"}]}