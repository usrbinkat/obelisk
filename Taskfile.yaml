version: '3'

tasks:
  run:
    desc: Fast development server with live reload and dirty builds
    cmds:
      - pkill -f "mkdocs serve" || true
      - poetry run mkdocs serve --livereload --dirty

  serve:
    desc: Build and serve the static site with live reload and open browser
    cmds:
      - pkill -f "mkdocs serve" || true
      - poetry run mkdocs serve --livereload --watch-theme --open

  build:
    desc: Build the static site without serving
    cmds:
      - poetry run mkdocs build

  test:
    desc: Build the static site with strict mode to catch errors
    cmds:
      - poetry run mkdocs build --clean --strict

  new:
    desc: Create a new markdown file in vault
    cmds:
      - mkdir -p vault
      - |
        cat > vault/{{.CLI_ARGS}}.md << EOF
        ---
        title: {{.CLI_ARGS}}
        date: $(date +%Y-%m-%d)
        ---

        EOF

  install:
    desc: Install or update dependencies with Poetry
    cmds:
      - poetry install --no-root

  update:
    desc: Update all dependencies to their latest versions
    cmds:
      - poetry update

  clean:
    desc: Clean build artifacts and kill running mkdocs processes
    cmds:
      - pkill -f "mkdocs serve" || true
      - docker stop obelisk || true
      - rm -rf site
      - find . -type d -name __pycache__ -exec rm -rf {} +
      
  clean-all:
    desc: Clean build artifacts, stop all obelisk docker containers, and remove images
    cmds:
      - task: clean
      - echo "Stopping all obelisk docker containers..."
      - docker stop obelisk obelisk-rag ollama open-webui 2>/dev/null || true
      - echo "Removing obelisk container images..."
      - docker rmi obelisk-obelisk obelisk-obelisk-rag 2>/dev/null || true
      
  clean-all-purge:
    desc: Clean everything including all containers, images, volumes, and networks
    cmds:
      - task: clean
      - echo "Stopping and removing all obelisk docker containers..."
      - docker-compose down 2>/dev/null || true
      - echo "Removing all obelisk volumes..."
      - docker volume rm obelisk_data obelisk_models obelisk_ollama obelisk_open-webui obelisk_rag-data obelisk_rag-vault 2>/dev/null || true
      - echo "Removing obelisk network..."
      - docker network rm obelisk_ollama-net 2>/dev/null || true
      - echo "Removing all obelisk-related container images..."
      - docker images | grep obelisk | awk '{print $1}' | xargs docker rmi -f 2>/dev/null || true

  docker-build:
    desc: Build the Docker container
    cmds:
      - docker build -t obelisk:latest .

  docker-run:
    desc: Run the Docker container for development
    cmds:
      - docker run -p 8000:8000 -v ${PWD}/vault:/app/vault -v ${PWD}/mkdocs.yml:/app/mkdocs.yml -v ${PWD}/pyproject.toml:/app/pyproject.toml -v ${PWD}/poetry.lock:/app/poetry.lock obelisk:latest

  compose:
    desc: Run the full stack with docker-compose
    cmds:
      - docker-compose up

  compose-obelisk:
    desc: Run only the obelisk service with docker-compose
    cmds:
      - docker-compose up obelisk

  gh-pages:
    desc: Deploy to GitHub Pages
    cmds:
      - poetry run mkdocs gh-deploy --force

  version-deploy:
    desc: "Deploy a new version (usage: task version-deploy -- 1.0.0 \"Version description\")"
    cmds:
      - poetry run mike deploy --push --update-aliases {{.CLI_ARGS}}

  version-set-default:
    desc: "Set the default version (usage: task version-set-default -- 1.0.0)"
    cmds:
      - poetry run mike set-default --push {{.CLI_ARGS}}
